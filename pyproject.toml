[project]
name = "aic-kb"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.12"
dependencies = [
    "aider-chat>=0.71.1",
    "asyncpg>=0.30.0",
    "crawl4ai>=0.4.24",
    "litellm>=1.53.9",
    "pydantic>=2.10.3",
    "pytest>=8.3.4",
    "python-dotenv>=1.0.1",
    "rich>=13.9.4",
    "typer>=0.15.1",
]

[dependency-groups]
dev = [
    "black>=24.10.0",
    "ipython>=8.31.0",
    "isort>=5.13.2",
    "mypy>=1.14.1",
    "pre-commit>=4.0.1",
    "pytest-asyncio>=0.25.2",
    "ruff>=0.9.2",
    "types-pyyaml>=6.0.12.20241230",
    "types-requests>=2.32.0.20241016",
    "pytest-cov>=4.1.0",
]

[tool.coverage.run]
source = ["aic_kb"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
]
fail_under = 80
show_missing = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
filterwarnings = [
    "ignore::DeprecationWarning",    # Ignore all deprecation warnings
#    "ignore::UserWarning",           # Ignore all user warnings
#    "ignore::FutureWarning",         # Ignore all future warnings
]

[tool.isort]
force_to_top = true
combine_as_imports = true
lines_before_imports = 0
lines_after_imports = 2

[tool.black]
line-length = 120

[tool.ruff]
target-version = "py312"
exclude = [
    "*.yaml",
    "*.yml",
]

[tool.ruff.lint]
ignore = ["E501", "B008"]

[[tool.mypy.overrides]]
module = [
    "aider.coders.*",
    "aider.io.*",
    "aider.models.*",
    "yaml",
    "requests"
]
ignore_missing_imports = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.scripts]
aic-kb = "aic_kb.cli:main"
